<!DOCTYPE html>
<html lang="en">
<%- include('includes/head', {title: 'Email Verified'}) %>

<body>
    <%- include('includes/header') %>
    <main>
        <div class="verificationContainer">
            <div class="verificationCard">
                <% if (success) { %>
                    <div class="verificationIconWrapper success">
                        <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="verificationIcon">
                            <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path>
                            <polyline points="22 4 12 14.01 9 11.01"></polyline>
                        </svg>
                    </div>
                    <h1>Email Verified Successfully!</h1>
                    <p class="verificationMessage">
                        Your email has been verified.
                    </p>
                    
                    <div id="redirectingMessage" class="redirectingMessage">
                        <div class="loadingSpinner"></div>
                        <p id="statusMessage">Checking your login status...</p>
                    </div>
                    
                    <div id="actionButtonsContainer" class="actionButtons" style="display: none;">
                        <a href="/dashboard/overview" class="actionButton">Go to Dashboard</a>
                        <a href="/login" class="actionButton secondary">Login to Account</a>
                    </div>
                <% } else { %>
                    <div class="verificationIconWrapper error">
                        <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="verificationIcon">
                            <circle cx="12" cy="12" r="10"></circle>
                            <line x1="15" y1="9" x2="9" y2="15"></line>
                            <line x1="9" y1="9" x2="15" y2="15"></line>
                        </svg>
                    </div>
                    <h1>Verification Failed</h1>
                    <p class="verificationMessage">
                        There was a problem verifying your email. The verification link may have expired or is invalid.
                    </p>
                    <div class="errorDetails">
                        <%= error || 'Unknown error' %>
                    </div>
                    <div class="actionButtons">
                        <a href="/login" class="actionButton secondary">Go to Login</a>
                    </div>
                <% } %>
            </div>
        </div>
    </main>
    <% if (success) { %>
    <script>
        const statusMessage = document.getElementById('statusMessage');
        const actionButtonsContainer = document.getElementById('actionButtonsContainer');
        const redirectingMessage = document.getElementById('redirectingMessage');
        
        // Check login status and try to auto-redirect
        const checkLoginStatus = async () => {
            try {
                // First, try a direct check with the refresh verification endpoint
                statusMessage.textContent = "Checking verification status...";
                const refreshResponse = await fetch('/refresh-verification', { 
                    method: 'HEAD',
                    redirect: 'manual'
                });
                
                // If we're redirected to dashboard, go there
                if (refreshResponse.redirected && refreshResponse.url.includes('/dashboard')) {
                    statusMessage.textContent = "Redirecting to dashboard...";
                    window.location.href = refreshResponse.url;
                    return;
                }
                
                // Otherwise check if we can access the dashboard directly
                statusMessage.textContent = "Checking login status...";
                const dashboardResponse = await fetch('/dashboard/overview', {
                    method: 'HEAD',
                    redirect: 'manual'
                });
                
                // If we're successfully accessing dashboard, redirect there
                if (!dashboardResponse.redirected || dashboardResponse.url.includes('/dashboard')) {
                    statusMessage.textContent = "Redirecting to dashboard...";
                    window.location.href = '/dashboard/overview';
                    return;
                }
                
                // If we get here, we're not logged in or not verified
                statusMessage.textContent = "Please log in to continue.";
                redirectingMessage.style.display = 'none';
                actionButtonsContainer.style.display = 'flex';
            } catch (error) {
                console.error('Error checking login status:', error);
                statusMessage.textContent = "Please log in to continue.";
                redirectingMessage.style.display = 'none';
                actionButtonsContainer.style.display = 'flex';
            }
        };
        
        // Execute the check after a short delay
        setTimeout(checkLoginStatus, 1000);
    </script>
    <% } %>
    <style>
        main {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: calc(100vh - 70px);
            background-color: #f9fafb;
        }
        .verificationContainer {
            width: 100%;
            max-width: 500px;
            padding: 20px;
        }
        .verificationCard {
            background: white;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06);
            padding: 32px;
            text-align: center;
        }
        .verificationIconWrapper {
            display: flex;
            justify-content: center;
            margin-bottom: 24px;
        }
        .verificationIconWrapper.success .verificationIcon {
            color: #4caf50;
        }
        .verificationIconWrapper.error .verificationIcon {
            color: #f44336;
        }
        h1 {
            font-size: 24px;
            font-weight: 600;
            margin-bottom: 16px;
            color: #1a1a1a;
        }
        .verificationMessage {
            font-size: 16px;
            line-height: 1.5;
            margin-bottom: 24px;
            color: #6b7280;
        }
        .errorDetails {
            background-color: #fce8e6;
            color: #c5221f;
            padding: 12px 16px;
            border-radius: 4px;
            font-size: 14px;
            margin-bottom: 24px;
            word-break: break-word;
        }
        .actionButtons {
            display: flex;
            flex-direction: column;
            gap: 12px;
            margin-bottom: 20px;
        }
        .actionButton {
            display: inline-block;
            padding: 10px 16px;
            background-color: #4285f4;
            color: white;
            text-decoration: none;
            border-radius: 4px;
            font-size: 14px;
            font-weight: 500;
            transition: background-color 0.2s;
        }
        .actionButton:hover {
            background-color: #3367d6;
        }
        .actionButton.secondary {
            background-color: white;
            color: #3c4043;
            border: 1px solid #dadce0;
        }
        .actionButton.secondary:hover {
            background-color: #f1f3f4;
        }
        .redirectingMessage {
            margin: 24px 0;
            display: flex;
            flex-direction: column;
            align-items: center;
            color: #5f6368;
            font-size: 14px;
        }
        .loadingSpinner {
            width: 24px;
            height: 24px;
            border: 3px solid #e6e6e6;
            border-radius: 50%;
            border-top-color: #4285f4;
            animation: spin 1s linear infinite;
            margin-bottom: 8px;
        }
        @keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }
    </style>
</body>

</html>