<div class="services-section">
    <h2>Services</h2>
    
    <div class="services-grid">
        <div id="servicesList" class="services-list">
            <!-- Services will be dynamically inserted here -->
        </div>

        <div class="service-form-container">
            <h2>Create a new service</h2>
            <p style="margin-bottom: 1rem;">Will be visible to all users on your booking page</p>
            <form id="newServiceForm" class="service-form">
                <input maxLength="40" type="text" id="serviceTitle" placeholder="Title" required>
                <textarea maxLength="100" id="serviceDescription" placeholder="Description" required></textarea>
                <input type="text" id="serviceLocation" placeholder="Location (optional)">
                
                <div class="service-details">
                    <input type="number" id="serviceCost" placeholder="Cost ($AUD)" required>
                    <input type="number" id="serviceDuration" placeholder="Duration (mins)" required>
                </div>

                <div class="time-selection">
                    <p>Pick the time that you will be available between</p>
                    <div class="time-range">
                        <div class="time-input-container">
                            <input type="time" id="startTime" value="09:00" required>
                        </div>
                        <div class="time-input-container">
                            <input type="time" id="endTime" value="21:00" required>
                        </div>
                    </div>
                </div>

                <div class="services-form-buttons">
                    <button type="button" id="cancelService" class="services-cancel-btn">Cancel</button>
                    <button type="submit" class="services-create-btn">Create new service</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const serviceForm = document.getElementById('newServiceForm');
    const servicesList = document.getElementById('servicesList');
    const cancelButton = document.getElementById('cancelService');

    // Load existing services
    loadServices();

    // Cancel button handler
    cancelButton.addEventListener('click', () => {
        serviceForm.reset();
    });

    // Form submission
    serviceForm.addEventListener('submit', async (e) => {
        e.preventDefault();

        const serviceData = {
            title: document.getElementById('serviceTitle').value,
            description: document.getElementById('serviceDescription').value,
            location: document.getElementById('serviceLocation').value,
            cost: document.getElementById('serviceCost').value,
            duration: document.getElementById('serviceDuration').value,
            availability: {
                startTime: document.getElementById('startTime').value,
                endTime: document.getElementById('endTime').value
            }
        };

        try {
            const response = await fetch('/api/services', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(serviceData)
            });

            if (response.ok) {
                serviceForm.reset();
                loadServices();
            } else {
                throw new Error('Failed to create service');
            }
        } catch (error) {
            console.error('Error creating service:', error);
            alert('Failed to create service. Please try again.');
        }
    });

    async function loadServices() {
        try {
            const response = await fetch('/api/services');
            const services = await response.json();
            
            // Hide services list if empty
            servicesList.style.display = services.length === 0 ? 'none' : 'flex';
            
            if (services.length > 0) {
                servicesList.innerHTML = services.map(service => `
                    <div class="service-card">
                        <div class="service-info">
                            <h3>${service.title}</h3>
                            <p>${service.cost} - ${service.duration}</p>
                        </div>
                        <div class="service-actions">
                            <button class="edit-btn">Edit</button>
                            <button class="delete-btn">Delete</button>
                        </div>
                    </div>
                `).join('');
            }
        } catch (error) {
            console.error('Error loading services:', error);
        }
    }
});
</script> 