<!DOCTYPE html>
<html lang="en">
<%- include('includes/head', {title: 'Verify Email'}) %>

<body>
    <%- include('includes/header') %>
    <main>
        <div class="verificationContainer">
            <div class="verificationCard">
                <div class="verificationIconWrapper">
                    <svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="emailIcon">
                        <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
                        <polyline points="22,6 12,13 2,6"></polyline>
                    </svg>
                </div>
                <h1>Check Your Email</h1>
                <p class="verificationMessage">
                    We've sent a verification link to<br>
                    <strong><%= email %></strong>
                </p>
                <div class="verificationInstructions">
                    Please check your inbox and click on the verification link to activate your account.
                    <span class="verificationNote">
                        <strong>Note:</strong> After clicking the verification link, if you don't get redirected,
                        please click the "Refresh Verification Status" button below or return to this page.
                    </span>
                </div>
                
                <div class="actionButtons">
                    <form action="/refresh-verification" method="post" id="refreshForm">
                        <button type="submit" class="refreshButton">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="refreshIcon">
                                <path d="M23 4v6h-6"></path>
                                <path d="M1 20v-6h6"></path>
                                <path d="M3.51 9a9 9 0 0 1 14.85-3.36L23 10"></path>
                                <path d="M1 14l4.64 4.36A9 9 0 0 0 20.49 15"></path>
                            </svg>
                            Refresh Verification Status
                        </button>
                    </form>
                    <button id="resendButton" class="resendButton">Resend Verification Email</button>
                    <form action="/logout" method="post" class="logoutForm">
                        <button type="submit" class="logoutButton">Logout</button>
                    </form>
                </div>
                
                <div id="message" class="message"></div>
                <div id="refreshStatus" class="refreshStatus" style="display: none;">
                    <div class="loadingSpinner"></div>
                    <p>Checking verification status...</p>
                </div>
            </div>
        </div>
    </main>
    <script>
        // Handle refresh verification form
        document.getElementById('refreshForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const refreshStatus = document.getElementById('refreshStatus');
            refreshStatus.style.display = 'flex';
            
            // First try submitting as a form post
            try {
                const response = await fetch('/refresh-verification', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ timestamp: Date.now() }),
                });
                
                if (response.redirected) {
                    window.location.href = response.url;
                    return;
                }
                
                // If no redirect, fall back to direct navigation
                window.location.href = '/refresh-verification';
            } catch (error) {
                console.error('Error submitting form:', error);
                // Fall back to direct navigation
                window.location.href = '/refresh-verification';
            }
        });

        document.getElementById('resendButton').addEventListener('click', async () => {
            const messageElement = document.getElementById('message');
            const button = document.getElementById('resendButton');
            
            button.disabled = true;
            button.classList.add('loading');
            button.textContent = 'Sending...';
            
            try {
                const response = await fetch('/resend-verification', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email: '<%= email %>' }),
                });

                const result = await response.json();
                if (response.ok) {
                    messageElement.textContent = 'Verification email sent! Please check your inbox.';
                    messageElement.className = 'message success';
                    
                    // Set a 60-second timer for the resend button
                    let seconds = 60;
                    button.textContent = `Resend (${seconds}s)`;
                    
                    const countdown = setInterval(() => {
                        seconds--;
                        button.textContent = `Resend (${seconds}s)`;
                        
                        if (seconds <= 0) {
                            clearInterval(countdown);
                            button.disabled = false;
                            button.classList.remove('loading');
                            button.textContent = 'Resend Verification Email';
                        }
                    }, 1000);
                } else {
                    messageElement.textContent = result.error;
                    messageElement.className = 'message error';
                    button.disabled = false;
                    button.classList.remove('loading');
                    button.textContent = 'Resend Verification Email';
                }
            } catch (error) {
                messageElement.textContent = 'An error occurred. Please try again.';
                messageElement.className = 'message error';
                button.disabled = false;
                button.classList.remove('loading');
                button.textContent = 'Resend Verification Email';
            }
        });
        
        // Set up auto-refresh to check verification status periodically
        let refreshCounter = 0;
        const maxRefreshes = 10;
        
        const checkVerificationStatus = async () => {
            if (refreshCounter >= maxRefreshes) return; // Stop after 10 tries
            
            refreshCounter++;
            
            try {
                // Make a lightweight HEAD request to the refresh endpoint
                const response = await fetch('/refresh-verification', { method: 'HEAD' });
                
                // If we get redirected to dashboard, reload the page to follow redirect
                if (response.redirected && response.url.includes('/dashboard')) {
                    window.location.href = response.url;
                }
            } catch (error) {
                console.error('Error checking verification status:', error);
            }
        };
        
        // Check every 15 seconds
        const statusCheckInterval = setInterval(checkVerificationStatus, 15000);
        
        // Clear interval when page is unloaded
        window.addEventListener('beforeunload', () => {
            clearInterval(statusCheckInterval);
        });
    </script>
    <style>
        main {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: calc(100vh - 70px);
            background-color: #f9fafb;
        }
        .verificationContainer {
            width: 100%;
            max-width: 500px;
            padding: 20px;
        }
        .verificationCard {
            background: white;
            border-radius: 8px;
            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06);
            padding: 32px;
            text-align: center;
        }
        .verificationIconWrapper {
            display: flex;
            justify-content: center;
            margin-bottom: 24px;
        }
        .emailIcon {
            color: #4285f4;
        }
        h1 {
            font-size: 24px;
            font-weight: 600;
            margin-bottom: 16px;
            color: #1a1a1a;
        }
        .verificationMessage {
            font-size: 16px;
            line-height: 1.5;
            margin-bottom: 8px;
            color: #1a1a1a;
        }
        .verificationInstructions {
            font-size: 14px;
            line-height: 1.5;
            margin-bottom: 24px;
            color: #6b7280;
        }
        .actionButtons {
            display: flex;
            flex-direction: column;
            gap: 12px;
            margin-bottom: 16px;
        }
        #refreshForm {
            width: 100%;
        }
        .refreshButton {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            width: 100%;
            padding: 10px 16px;
            background-color: #34a853;
            color: white;
            text-decoration: none;
            border: none;
            border-radius: 4px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.2s;
        }
        .refreshButton:hover {
            background-color: #1e8e3e;
        }
        .refreshIcon {
            animation: pulse 2s infinite;
        }
        @keyframes pulse {
            0% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.1);
            }
            100% {
                transform: scale(1);
            }
        }
        .resendButton {
            padding: 10px 16px;
            background-color: #4285f4;
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.2s;
        }
        .resendButton:hover {
            background-color: #3367d6;
        }
        .resendButton:disabled {
            background-color: #9aa0a6;
            cursor: not-allowed;
        }
        .logoutForm {
            width: 100%;
        }
        .logoutButton {
            width: 100%;
            padding: 10px 16px;
            background-color: white;
            color: #5f6368;
            border: 1px solid #dadce0;
            border-radius: 4px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: background-color 0.2s;
        }
        .logoutButton:hover {
            background-color: #f1f3f4;
        }
        .message, .refreshStatus {
            padding: 12px;
            border-radius: 4px;
            font-size: 14px;
            margin-top: 16px;
            display: none;
        }
        .message:not(:empty) {
            display: block;
        }
        .refreshStatus {
            display: none;
            flex-direction: column;
            align-items: center;
            background-color: #e8f0fe;
            color: #1967d2;
        }
        .success {
            background-color: #e6f4ea;
            color: #137333;
        }
        .error {
            background-color: #fce8e6;
            color: #c5221f;
        }
        .loading {
            position: relative;
        }
        .loading::after {
            content: "";
            display: inline-block;
            width: 1em;
            height: 1em;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s ease-in-out infinite;
            margin-left: 8px;
            vertical-align: middle;
        }
        .loadingSpinner {
            width: 20px;
            height: 20px;
            border: 2px solid rgba(25, 103, 210, 0.3);
            border-radius: 50%;
            border-top-color: #1967d2;
            animation: spin 1s ease-in-out infinite;
            margin-bottom: 8px;
        }
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        .verificationNote {
            display: block;
            margin-top: 12px;
            background-color: #f9f2f2;
            border-left: 3px solid #ea4335;
            padding: 8px 12px;
            font-size: 13px;
            text-align: left;
            border-radius: 4px;
        }
    </style>
</body>

</html>